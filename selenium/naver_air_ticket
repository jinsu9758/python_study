from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

#time으로 로딩을 기다려 줘도 되지만, 위의 라이브러리로 작업이 끝나고 바로 실행하라는 코드를 짤 수 있다고 함.

browser = webdriver.Chrome(r"C:\Users\CKIRUser\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.7\jin\chromedriver.exe")

#browser.maximize_window()  # 브라우저 창 최대로 키워주는 역할을 함.

url = "https://flight.naver.com/flights/"

browser.get(url)

#가는 날 선택 클릭
browser.find_element_by_link_text("가는날 선택").click()

#이번달 27일, 28일 선택
#browser.find_elements_by_link_text("27")[0].click() #[0] -> 이번달
#browser.find_elements_by_link_text("28")[0].click() #[0] -> 이번달

#다음달 27일, 28일 선택
#browser.find_elements_by_link_text("27")[1].click() #[1] -> 다음달
#browser.find_elements_by_link_text("28")[1].click() #[1] -> 다음달

#이번달 27일 ~ 다음달 28일 선택
browser.find_elements_by_link_text("27")[0].click() #[0] -> 이번달
browser.find_elements_by_link_text("28")[1].click() #[1] -> 다음달

#제주도 선택하기
browser.find_element_by_xpath("//*[@id='recommendationList']/ul/li[1]/div/span").click()

#항공권 검색 클릭
browser.find_element_by_link_text("항공권 검색").click()

#브라우저에서 최대 10초 기다리고, 해당 xpath 값이 나오면 진행
#xpath외에도 id, class_name, link_text 다 가능하다고 함.
try:
    elem = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH, "//*[@id='content']/div[2]/div/div[4]/ul/li[1]")))
    print(elem.text) #첫번째 결과 출
finally:
    browser.quit() #끝나고 나면 브라우저 끔
#결과 출력
#elem = browser.find_element_by_xpath("//*[@id='content']/div[2]/div/div[4]/ul/li[1]")
#print(elem.text)